
    Release 1.3 of LSD mount utilities with mkfs, fsck and LUKS support
    ___________________________________________________________________
    
    A new version of the LSD mount utilities has been released.
    
      - LUKS support has been tested (by Alexander Ulrich) and does not
	seem to fail.
    
      - Basic versions of mkfs.lcrypt and fsck.lcrypt have been added:
        You can now use mkfs to create a filesystem on your encrypted
        device and fsck to check your filesystem.
     
      - The file USAGE (see below) is intended to be a user manual.
    
    Regards -- M E Leypold, 16 Feb 2007.
    
    
*   About
    ====

    The LSD mount utilities assist in setting up (creating) and
    mounting of encrypted loopback filesystems in Linux 2.4 and 2.6.

    They also enable users (not only root) to mount encrypted
    filesystems if appropriate entries have been added to /etc/fstab.

    The LSD mount utilities are licensed/distributed under the the
    terms of the GPL Version 2 (no later version). We'll usually be
    happy though to relicense under other OS licenses, but you have to
    ask and get the licensing change from us in writing.

    The LSD mount utilities are available from
    http://software.m-e-leypold.de. Read the README from the
    distribution before using the software!
    

*   How to get more information and help
    ====================================

    Information on recent development and plans and updated
    documentation will be posted at

      http://www.etc-network.de/blog/mel/projects/lsd-mount-utilities

    If you need help, have questions concerning the LSD mount
    utilities or have suggestions for further implementation you can
    write the developer at

       development-2006-8ecbb5cc8a-REMOVE-THIS@AND-THAT-m-e-leypold.de.

    I don't guarantee support, but will usually do my best to help.


    
*   How to use (excerpt from USAGE)
    ===============================
    
    PLEASE DO READ the file USAGE in the distribution. The following
    excerpt is only intended to give you a basic idea how things work
    with LSD mount utilities (i.e. that the hide all losetup and
    cryptsetup stuff from the user).
    
    
**  Creating an encrypted file system
    ---------------------------------

    Before you can make an encrypted file system you need to create an
    image file and preferably fill it with random noise:

      dd if=/dev/urandom of=/secret/image

    Given an image files a encrypted file systems can be initialised
    with plain mkfs:

      mkfs -t lcrypt /secret/image 10000

    The 'blocks' number is optional (you usually can leave it
    out). You'll be asked for the passphrase twice.


*   Checking an encrypted file system
    ---------------------------------

    An encrypted filesystem can be checked passing '-t lcrypt' to fsck.
 
      fsck -t lcrypt /secret/image

    You will, of course be asked for the passphrase.

    If there is an entry in /etc/fstab (see the next sections) which
    already gives the type of /secret/image as lcrypt, the '-t lcrypt'
    might be omitted:

      fsck /secret/image


*   Mounting an encrypted file system
    ----------------------------------

    To mount an encrypted filesystem you can pass '-t lcrypt' to
    mount:

      mount -t lcrypt /data/encrypted-image /mnt 

    You'll be asked for the passphrase.

    If there is an entry in /etc/fstab (see the next sections) which
    already gives the type of /secret/image as lcrypt, the '-t lcrypt'
    and the mount point might be omitted.

      mount /data/encrypted-image


*   Setting up encrpyted file systems in /etc/fstab
    -----------------------------------------------

    Use lcrypt as filesystemtype. Use the option 'user', if
    non-privileged users should be able to mount the device:

      /etc/fstab:
      |
      ...
      |
      | /data/encrypted-image /secret-mnt lcrypt  rw,noauto,user,exec 0 0
      |

   
*   Loclean: Clean up loopback devices
    ----------------------------------
    
    Loclean can only be used by root:

      loclean

    and will try to remove all associations with files from loopback
    devices (/dev/loop*) that are not currently in use.


    